from typing import Any, Dict, List, Optional

from .base import BaseTool


class VulnerabilityScanner(BaseTool):
    async def execute(
        self,
        file_path: Optional[str] = None,
        language: Optional[str] = None,
        content: Optional[str] = None,
        rule_ids: Optional[List[str]] = None,
        endpoint: str = "http://localhost:8080/api/scan",
    ) -> Dict[str, Any]:
        try:
            import json
            import urllib.request
            import urllib.error

            payload: Dict[str, Any] = {
                "file_path": file_path or "",
                "language": language or "",
                "content": content or "",
                "rule_ids": rule_ids or [],
            }

            data = json.dumps(payload).encode("utf-8")
            req = urllib.request.Request(
                endpoint,
                data=data,
                headers={"Content-Type": "application/json"},
                method="POST",
            )

            try:
                with urllib.request.urlopen(req, timeout=15) as resp:
                    body = resp.read().decode("utf-8")
                    result = json.loads(body)
            except (urllib.error.URLError, urllib.error.HTTPError, TimeoutError) as e:
                return self.format_error(e)

            return self.format_success(result)
        except Exception as e:
            return self.format_error(e)