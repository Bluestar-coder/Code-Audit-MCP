// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        v6.33.0
// source: call_chain.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 构建调用图请求
type BuildCallGraphRequest struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	FilePath        string                 `protobuf:"bytes,1,opt,name=file_path,json=filePath,proto3" json:"file_path,omitempty"`                       // 文件路径
	EntryPoints     []string               `protobuf:"bytes,2,rep,name=entry_points,json=entryPoints,proto3" json:"entry_points,omitempty"`              // 入口点
	IncludeExternal bool                   `protobuf:"varint,3,opt,name=include_external,json=includeExternal,proto3" json:"include_external,omitempty"` // 是否包含外部调用
	MaxDepth        int32                  `protobuf:"varint,4,opt,name=max_depth,json=maxDepth,proto3" json:"max_depth,omitempty"`                      // 最大深度
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *BuildCallGraphRequest) Reset() {
	*x = BuildCallGraphRequest{}
	mi := &file_call_chain_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BuildCallGraphRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BuildCallGraphRequest) ProtoMessage() {}

func (x *BuildCallGraphRequest) ProtoReflect() protoreflect.Message {
	mi := &file_call_chain_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BuildCallGraphRequest.ProtoReflect.Descriptor instead.
func (*BuildCallGraphRequest) Descriptor() ([]byte, []int) {
	return file_call_chain_proto_rawDescGZIP(), []int{0}
}

func (x *BuildCallGraphRequest) GetFilePath() string {
	if x != nil {
		return x.FilePath
	}
	return ""
}

func (x *BuildCallGraphRequest) GetEntryPoints() []string {
	if x != nil {
		return x.EntryPoints
	}
	return nil
}

func (x *BuildCallGraphRequest) GetIncludeExternal() bool {
	if x != nil {
		return x.IncludeExternal
	}
	return false
}

func (x *BuildCallGraphRequest) GetMaxDepth() int32 {
	if x != nil {
		return x.MaxDepth
	}
	return 0
}

// 构建调用图响应
type BuildCallGraphResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`                              // 是否成功
	GraphId       string                 `protobuf:"bytes,2,opt,name=graph_id,json=graphId,proto3" json:"graph_id,omitempty"`                // 图ID
	NodeCount     int32                  `protobuf:"varint,3,opt,name=node_count,json=nodeCount,proto3" json:"node_count,omitempty"`         // 节点数
	EdgeCount     int32                  `protobuf:"varint,4,opt,name=edge_count,json=edgeCount,proto3" json:"edge_count,omitempty"`         // 边数
	BuildTimeMs   int32                  `protobuf:"varint,5,opt,name=build_time_ms,json=buildTimeMs,proto3" json:"build_time_ms,omitempty"` // 构建耗时
	ErrorMessage  string                 `protobuf:"bytes,6,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"` // 错误信息
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BuildCallGraphResponse) Reset() {
	*x = BuildCallGraphResponse{}
	mi := &file_call_chain_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BuildCallGraphResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BuildCallGraphResponse) ProtoMessage() {}

func (x *BuildCallGraphResponse) ProtoReflect() protoreflect.Message {
	mi := &file_call_chain_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BuildCallGraphResponse.ProtoReflect.Descriptor instead.
func (*BuildCallGraphResponse) Descriptor() ([]byte, []int) {
	return file_call_chain_proto_rawDescGZIP(), []int{1}
}

func (x *BuildCallGraphResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *BuildCallGraphResponse) GetGraphId() string {
	if x != nil {
		return x.GraphId
	}
	return ""
}

func (x *BuildCallGraphResponse) GetNodeCount() int32 {
	if x != nil {
		return x.NodeCount
	}
	return 0
}

func (x *BuildCallGraphResponse) GetEdgeCount() int32 {
	if x != nil {
		return x.EdgeCount
	}
	return 0
}

func (x *BuildCallGraphResponse) GetBuildTimeMs() int32 {
	if x != nil {
		return x.BuildTimeMs
	}
	return 0
}

func (x *BuildCallGraphResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

// 调用图节点
type CallGraphNode struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	NodeId        string                 `protobuf:"bytes,1,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`                   // 节点ID
	FunctionName  string                 `protobuf:"bytes,2,opt,name=function_name,json=functionName,proto3" json:"function_name,omitempty"` // 函数名
	FilePath      string                 `protobuf:"bytes,3,opt,name=file_path,json=filePath,proto3" json:"file_path,omitempty"`             // 文件路径
	LineNumber    int32                  `protobuf:"varint,4,opt,name=line_number,json=lineNumber,proto3" json:"line_number,omitempty"`      // 行号
	InDegree      int32                  `protobuf:"varint,5,opt,name=in_degree,json=inDegree,proto3" json:"in_degree,omitempty"`            // 入度（被调用次数）
	OutDegree     int32                  `protobuf:"varint,6,opt,name=out_degree,json=outDegree,proto3" json:"out_degree,omitempty"`         // 出度（调用其他函数次数）
	IsExternal    bool                   `protobuf:"varint,7,opt,name=is_external,json=isExternal,proto3" json:"is_external,omitempty"`      // 是否外部函数
	IsRecursive   bool                   `protobuf:"varint,8,opt,name=is_recursive,json=isRecursive,proto3" json:"is_recursive,omitempty"`   // 是否递归
	NodeType      string                 `protobuf:"bytes,9,opt,name=node_type,json=nodeType,proto3" json:"node_type,omitempty"`             // 节点类型（method, function, lambda等）
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CallGraphNode) Reset() {
	*x = CallGraphNode{}
	mi := &file_call_chain_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CallGraphNode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CallGraphNode) ProtoMessage() {}

func (x *CallGraphNode) ProtoReflect() protoreflect.Message {
	mi := &file_call_chain_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CallGraphNode.ProtoReflect.Descriptor instead.
func (*CallGraphNode) Descriptor() ([]byte, []int) {
	return file_call_chain_proto_rawDescGZIP(), []int{2}
}

func (x *CallGraphNode) GetNodeId() string {
	if x != nil {
		return x.NodeId
	}
	return ""
}

func (x *CallGraphNode) GetFunctionName() string {
	if x != nil {
		return x.FunctionName
	}
	return ""
}

func (x *CallGraphNode) GetFilePath() string {
	if x != nil {
		return x.FilePath
	}
	return ""
}

func (x *CallGraphNode) GetLineNumber() int32 {
	if x != nil {
		return x.LineNumber
	}
	return 0
}

func (x *CallGraphNode) GetInDegree() int32 {
	if x != nil {
		return x.InDegree
	}
	return 0
}

func (x *CallGraphNode) GetOutDegree() int32 {
	if x != nil {
		return x.OutDegree
	}
	return 0
}

func (x *CallGraphNode) GetIsExternal() bool {
	if x != nil {
		return x.IsExternal
	}
	return false
}

func (x *CallGraphNode) GetIsRecursive() bool {
	if x != nil {
		return x.IsRecursive
	}
	return false
}

func (x *CallGraphNode) GetNodeType() string {
	if x != nil {
		return x.NodeType
	}
	return ""
}

// 调用图边
type CallGraphEdge struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FromNodeId    string                 `protobuf:"bytes,1,opt,name=from_node_id,json=fromNodeId,proto3" json:"from_node_id,omitempty"`    // 源节点ID
	ToNodeId      string                 `protobuf:"bytes,2,opt,name=to_node_id,json=toNodeId,proto3" json:"to_node_id,omitempty"`          // 目标节点ID
	CallType      string                 `protobuf:"bytes,3,opt,name=call_type,json=callType,proto3" json:"call_type,omitempty"`            // 调用类型（direct, indirect, conditional）
	CallCount     int32                  `protobuf:"varint,4,opt,name=call_count,json=callCount,proto3" json:"call_count,omitempty"`        // 调用次数
	CallLines     []int32                `protobuf:"varint,5,rep,packed,name=call_lines,json=callLines,proto3" json:"call_lines,omitempty"` // 调用行号列表
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CallGraphEdge) Reset() {
	*x = CallGraphEdge{}
	mi := &file_call_chain_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CallGraphEdge) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CallGraphEdge) ProtoMessage() {}

func (x *CallGraphEdge) ProtoReflect() protoreflect.Message {
	mi := &file_call_chain_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CallGraphEdge.ProtoReflect.Descriptor instead.
func (*CallGraphEdge) Descriptor() ([]byte, []int) {
	return file_call_chain_proto_rawDescGZIP(), []int{3}
}

func (x *CallGraphEdge) GetFromNodeId() string {
	if x != nil {
		return x.FromNodeId
	}
	return ""
}

func (x *CallGraphEdge) GetToNodeId() string {
	if x != nil {
		return x.ToNodeId
	}
	return ""
}

func (x *CallGraphEdge) GetCallType() string {
	if x != nil {
		return x.CallType
	}
	return ""
}

func (x *CallGraphEdge) GetCallCount() int32 {
	if x != nil {
		return x.CallCount
	}
	return 0
}

func (x *CallGraphEdge) GetCallLines() []int32 {
	if x != nil {
		return x.CallLines
	}
	return nil
}

// 查询调用路径请求
type QueryCallPathRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	SourceFunction string                 `protobuf:"bytes,1,opt,name=source_function,json=sourceFunction,proto3" json:"source_function,omitempty"` // 源函数
	TargetFunction string                 `protobuf:"bytes,2,opt,name=target_function,json=targetFunction,proto3" json:"target_function,omitempty"` // 目标函数
	MaxPaths       int32                  `protobuf:"varint,3,opt,name=max_paths,json=maxPaths,proto3" json:"max_paths,omitempty"`                  // 最多返回路径数
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *QueryCallPathRequest) Reset() {
	*x = QueryCallPathRequest{}
	mi := &file_call_chain_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryCallPathRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryCallPathRequest) ProtoMessage() {}

func (x *QueryCallPathRequest) ProtoReflect() protoreflect.Message {
	mi := &file_call_chain_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryCallPathRequest.ProtoReflect.Descriptor instead.
func (*QueryCallPathRequest) Descriptor() ([]byte, []int) {
	return file_call_chain_proto_rawDescGZIP(), []int{4}
}

func (x *QueryCallPathRequest) GetSourceFunction() string {
	if x != nil {
		return x.SourceFunction
	}
	return ""
}

func (x *QueryCallPathRequest) GetTargetFunction() string {
	if x != nil {
		return x.TargetFunction
	}
	return ""
}

func (x *QueryCallPathRequest) GetMaxPaths() int32 {
	if x != nil {
		return x.MaxPaths
	}
	return 0
}

// 查询调用路径响应
type QueryCallPathResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Paths         []*CallPath            `protobuf:"bytes,1,rep,name=paths,proto3" json:"paths,omitempty"`                              // 调用路径列表
	TotalPaths    int32                  `protobuf:"varint,2,opt,name=total_paths,json=totalPaths,proto3" json:"total_paths,omitempty"` // 总路径数
	PathExists    bool                   `protobuf:"varint,3,opt,name=path_exists,json=pathExists,proto3" json:"path_exists,omitempty"` // 是否存在路径
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueryCallPathResponse) Reset() {
	*x = QueryCallPathResponse{}
	mi := &file_call_chain_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryCallPathResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryCallPathResponse) ProtoMessage() {}

func (x *QueryCallPathResponse) ProtoReflect() protoreflect.Message {
	mi := &file_call_chain_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryCallPathResponse.ProtoReflect.Descriptor instead.
func (*QueryCallPathResponse) Descriptor() ([]byte, []int) {
	return file_call_chain_proto_rawDescGZIP(), []int{5}
}

func (x *QueryCallPathResponse) GetPaths() []*CallPath {
	if x != nil {
		return x.Paths
	}
	return nil
}

func (x *QueryCallPathResponse) GetTotalPaths() int32 {
	if x != nil {
		return x.TotalPaths
	}
	return 0
}

func (x *QueryCallPathResponse) GetPathExists() bool {
	if x != nil {
		return x.PathExists
	}
	return false
}

// 调用路径
type CallPath struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PathIndex     int32                  `protobuf:"varint,1,opt,name=path_index,json=pathIndex,proto3" json:"path_index,omitempty"`    // 路径序号
	Nodes         []*CallGraphNode       `protobuf:"bytes,2,rep,name=nodes,proto3" json:"nodes,omitempty"`                              // 路径节点
	PathLength    int32                  `protobuf:"varint,3,opt,name=path_length,json=pathLength,proto3" json:"path_length,omitempty"` // 路径长度
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CallPath) Reset() {
	*x = CallPath{}
	mi := &file_call_chain_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CallPath) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CallPath) ProtoMessage() {}

func (x *CallPath) ProtoReflect() protoreflect.Message {
	mi := &file_call_chain_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CallPath.ProtoReflect.Descriptor instead.
func (*CallPath) Descriptor() ([]byte, []int) {
	return file_call_chain_proto_rawDescGZIP(), []int{6}
}

func (x *CallPath) GetPathIndex() int32 {
	if x != nil {
		return x.PathIndex
	}
	return 0
}

func (x *CallPath) GetNodes() []*CallGraphNode {
	if x != nil {
		return x.Nodes
	}
	return nil
}

func (x *CallPath) GetPathLength() int32 {
	if x != nil {
		return x.PathLength
	}
	return 0
}

// 查询调用深度请求
type QueryCallDepthRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FunctionName  string                 `protobuf:"bytes,1,opt,name=function_name,json=functionName,proto3" json:"function_name,omitempty"` // 函数名
	Direction     string                 `protobuf:"bytes,2,opt,name=direction,proto3" json:"direction,omitempty"`                           // 方向（incoming, outgoing, both）
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueryCallDepthRequest) Reset() {
	*x = QueryCallDepthRequest{}
	mi := &file_call_chain_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryCallDepthRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryCallDepthRequest) ProtoMessage() {}

func (x *QueryCallDepthRequest) ProtoReflect() protoreflect.Message {
	mi := &file_call_chain_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryCallDepthRequest.ProtoReflect.Descriptor instead.
func (*QueryCallDepthRequest) Descriptor() ([]byte, []int) {
	return file_call_chain_proto_rawDescGZIP(), []int{7}
}

func (x *QueryCallDepthRequest) GetFunctionName() string {
	if x != nil {
		return x.FunctionName
	}
	return ""
}

func (x *QueryCallDepthRequest) GetDirection() string {
	if x != nil {
		return x.Direction
	}
	return ""
}

// 查询调用深度响应
type QueryCallDepthResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	IncomingDepth int32                  `protobuf:"varint,1,opt,name=incoming_depth,json=incomingDepth,proto3" json:"incoming_depth,omitempty"` // 传入调用深度
	OutgoingDepth int32                  `protobuf:"varint,2,opt,name=outgoing_depth,json=outgoingDepth,proto3" json:"outgoing_depth,omitempty"` // 传出调用深度
	MaxDepth      int32                  `protobuf:"varint,3,opt,name=max_depth,json=maxDepth,proto3" json:"max_depth,omitempty"`                // 最大深度
	Levels        []*DepthLevel          `protobuf:"bytes,4,rep,name=levels,proto3" json:"levels,omitempty"`                                     // 深度级别信息
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueryCallDepthResponse) Reset() {
	*x = QueryCallDepthResponse{}
	mi := &file_call_chain_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryCallDepthResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryCallDepthResponse) ProtoMessage() {}

func (x *QueryCallDepthResponse) ProtoReflect() protoreflect.Message {
	mi := &file_call_chain_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryCallDepthResponse.ProtoReflect.Descriptor instead.
func (*QueryCallDepthResponse) Descriptor() ([]byte, []int) {
	return file_call_chain_proto_rawDescGZIP(), []int{8}
}

func (x *QueryCallDepthResponse) GetIncomingDepth() int32 {
	if x != nil {
		return x.IncomingDepth
	}
	return 0
}

func (x *QueryCallDepthResponse) GetOutgoingDepth() int32 {
	if x != nil {
		return x.OutgoingDepth
	}
	return 0
}

func (x *QueryCallDepthResponse) GetMaxDepth() int32 {
	if x != nil {
		return x.MaxDepth
	}
	return 0
}

func (x *QueryCallDepthResponse) GetLevels() []*DepthLevel {
	if x != nil {
		return x.Levels
	}
	return nil
}

// 深度级别信息
type DepthLevel struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Level         int32                  `protobuf:"varint,1,opt,name=level,proto3" json:"level,omitempty"`        // 级别
	Functions     []string               `protobuf:"bytes,2,rep,name=functions,proto3" json:"functions,omitempty"` // 该级别的函数
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DepthLevel) Reset() {
	*x = DepthLevel{}
	mi := &file_call_chain_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DepthLevel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DepthLevel) ProtoMessage() {}

func (x *DepthLevel) ProtoReflect() protoreflect.Message {
	mi := &file_call_chain_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DepthLevel.ProtoReflect.Descriptor instead.
func (*DepthLevel) Descriptor() ([]byte, []int) {
	return file_call_chain_proto_rawDescGZIP(), []int{9}
}

func (x *DepthLevel) GetLevel() int32 {
	if x != nil {
		return x.Level
	}
	return 0
}

func (x *DepthLevel) GetFunctions() []string {
	if x != nil {
		return x.Functions
	}
	return nil
}

// 分析循环调用请求
type AnalyzeCyclesRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	StartFunction  string                 `protobuf:"bytes,1,opt,name=start_function,json=startFunction,proto3" json:"start_function,omitempty"`       // 起始函数
	MaxCycleLength int32                  `protobuf:"varint,2,opt,name=max_cycle_length,json=maxCycleLength,proto3" json:"max_cycle_length,omitempty"` // 最大循环长度
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *AnalyzeCyclesRequest) Reset() {
	*x = AnalyzeCyclesRequest{}
	mi := &file_call_chain_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AnalyzeCyclesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AnalyzeCyclesRequest) ProtoMessage() {}

func (x *AnalyzeCyclesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_call_chain_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AnalyzeCyclesRequest.ProtoReflect.Descriptor instead.
func (*AnalyzeCyclesRequest) Descriptor() ([]byte, []int) {
	return file_call_chain_proto_rawDescGZIP(), []int{10}
}

func (x *AnalyzeCyclesRequest) GetStartFunction() string {
	if x != nil {
		return x.StartFunction
	}
	return ""
}

func (x *AnalyzeCyclesRequest) GetMaxCycleLength() int32 {
	if x != nil {
		return x.MaxCycleLength
	}
	return 0
}

// 分析循环调用响应
type AnalyzeCyclesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	HasCycles     bool                   `protobuf:"varint,1,opt,name=has_cycles,json=hasCycles,proto3" json:"has_cycles,omitempty"`       // 是否存在循环
	Cycles        []*CallCycle           `protobuf:"bytes,2,rep,name=cycles,proto3" json:"cycles,omitempty"`                               // 循环列表
	TotalCycles   int32                  `protobuf:"varint,3,opt,name=total_cycles,json=totalCycles,proto3" json:"total_cycles,omitempty"` // 循环总数
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AnalyzeCyclesResponse) Reset() {
	*x = AnalyzeCyclesResponse{}
	mi := &file_call_chain_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AnalyzeCyclesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AnalyzeCyclesResponse) ProtoMessage() {}

func (x *AnalyzeCyclesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_call_chain_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AnalyzeCyclesResponse.ProtoReflect.Descriptor instead.
func (*AnalyzeCyclesResponse) Descriptor() ([]byte, []int) {
	return file_call_chain_proto_rawDescGZIP(), []int{11}
}

func (x *AnalyzeCyclesResponse) GetHasCycles() bool {
	if x != nil {
		return x.HasCycles
	}
	return false
}

func (x *AnalyzeCyclesResponse) GetCycles() []*CallCycle {
	if x != nil {
		return x.Cycles
	}
	return nil
}

func (x *AnalyzeCyclesResponse) GetTotalCycles() int32 {
	if x != nil {
		return x.TotalCycles
	}
	return 0
}

// 调用循环
type CallCycle struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CycleId       int32                  `protobuf:"varint,1,opt,name=cycle_id,json=cycleId,proto3" json:"cycle_id,omitempty"`             // 循环ID
	Functions     []string               `protobuf:"bytes,2,rep,name=functions,proto3" json:"functions,omitempty"`                         // 循环涉及的函数
	CycleLength   int32                  `protobuf:"varint,3,opt,name=cycle_length,json=cycleLength,proto3" json:"cycle_length,omitempty"` // 循环长度
	Lines         []int32                `protobuf:"varint,4,rep,packed,name=lines,proto3" json:"lines,omitempty"`                         // 关键行号
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CallCycle) Reset() {
	*x = CallCycle{}
	mi := &file_call_chain_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CallCycle) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CallCycle) ProtoMessage() {}

func (x *CallCycle) ProtoReflect() protoreflect.Message {
	mi := &file_call_chain_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CallCycle.ProtoReflect.Descriptor instead.
func (*CallCycle) Descriptor() ([]byte, []int) {
	return file_call_chain_proto_rawDescGZIP(), []int{12}
}

func (x *CallCycle) GetCycleId() int32 {
	if x != nil {
		return x.CycleId
	}
	return 0
}

func (x *CallCycle) GetFunctions() []string {
	if x != nil {
		return x.Functions
	}
	return nil
}

func (x *CallCycle) GetCycleLength() int32 {
	if x != nil {
		return x.CycleLength
	}
	return 0
}

func (x *CallCycle) GetLines() []int32 {
	if x != nil {
		return x.Lines
	}
	return nil
}

// 查询死代码请求
type FindDeadCodeRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FilePath      string                 `protobuf:"bytes,1,opt,name=file_path,json=filePath,proto3" json:"file_path,omitempty"`              // 文件路径
	EntryPoints   []string               `protobuf:"bytes,2,rep,name=entry_points,json=entryPoints,proto3" json:"entry_points,omitempty"`     // 入口点
	IncludeTests  bool                   `protobuf:"varint,3,opt,name=include_tests,json=includeTests,proto3" json:"include_tests,omitempty"` // 是否包含测试代码
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FindDeadCodeRequest) Reset() {
	*x = FindDeadCodeRequest{}
	mi := &file_call_chain_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FindDeadCodeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindDeadCodeRequest) ProtoMessage() {}

func (x *FindDeadCodeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_call_chain_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindDeadCodeRequest.ProtoReflect.Descriptor instead.
func (*FindDeadCodeRequest) Descriptor() ([]byte, []int) {
	return file_call_chain_proto_rawDescGZIP(), []int{13}
}

func (x *FindDeadCodeRequest) GetFilePath() string {
	if x != nil {
		return x.FilePath
	}
	return ""
}

func (x *FindDeadCodeRequest) GetEntryPoints() []string {
	if x != nil {
		return x.EntryPoints
	}
	return nil
}

func (x *FindDeadCodeRequest) GetIncludeTests() bool {
	if x != nil {
		return x.IncludeTests
	}
	return false
}

// 查询死代码响应
type FindDeadCodeResponse struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	DeadFunctions  []*DeadCodeInfo        `protobuf:"bytes,1,rep,name=dead_functions,json=deadFunctions,proto3" json:"dead_functions,omitempty"`       // 死代码函数
	TotalDeadCount int32                  `protobuf:"varint,2,opt,name=total_dead_count,json=totalDeadCount,proto3" json:"total_dead_count,omitempty"` // 死代码总数
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *FindDeadCodeResponse) Reset() {
	*x = FindDeadCodeResponse{}
	mi := &file_call_chain_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FindDeadCodeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindDeadCodeResponse) ProtoMessage() {}

func (x *FindDeadCodeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_call_chain_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindDeadCodeResponse.ProtoReflect.Descriptor instead.
func (*FindDeadCodeResponse) Descriptor() ([]byte, []int) {
	return file_call_chain_proto_rawDescGZIP(), []int{14}
}

func (x *FindDeadCodeResponse) GetDeadFunctions() []*DeadCodeInfo {
	if x != nil {
		return x.DeadFunctions
	}
	return nil
}

func (x *FindDeadCodeResponse) GetTotalDeadCount() int32 {
	if x != nil {
		return x.TotalDeadCount
	}
	return 0
}

// 死代码信息
type DeadCodeInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FunctionName  string                 `protobuf:"bytes,1,opt,name=function_name,json=functionName,proto3" json:"function_name,omitempty"` // 函数名
	FilePath      string                 `protobuf:"bytes,2,opt,name=file_path,json=filePath,proto3" json:"file_path,omitempty"`             // 文件路径
	StartLine     int32                  `protobuf:"varint,3,opt,name=start_line,json=startLine,proto3" json:"start_line,omitempty"`         // 起始行
	EndLine       int32                  `protobuf:"varint,4,opt,name=end_line,json=endLine,proto3" json:"end_line,omitempty"`               // 结束行
	LineCount     int32                  `protobuf:"varint,5,opt,name=line_count,json=lineCount,proto3" json:"line_count,omitempty"`         // 代码行数
	Complexity    float64                `protobuf:"fixed64,6,opt,name=complexity,proto3" json:"complexity,omitempty"`                       // 复杂度
	Reason        string                 `protobuf:"bytes,7,opt,name=reason,proto3" json:"reason,omitempty"`                                 // 死代码原因
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeadCodeInfo) Reset() {
	*x = DeadCodeInfo{}
	mi := &file_call_chain_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeadCodeInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeadCodeInfo) ProtoMessage() {}

func (x *DeadCodeInfo) ProtoReflect() protoreflect.Message {
	mi := &file_call_chain_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeadCodeInfo.ProtoReflect.Descriptor instead.
func (*DeadCodeInfo) Descriptor() ([]byte, []int) {
	return file_call_chain_proto_rawDescGZIP(), []int{15}
}

func (x *DeadCodeInfo) GetFunctionName() string {
	if x != nil {
		return x.FunctionName
	}
	return ""
}

func (x *DeadCodeInfo) GetFilePath() string {
	if x != nil {
		return x.FilePath
	}
	return ""
}

func (x *DeadCodeInfo) GetStartLine() int32 {
	if x != nil {
		return x.StartLine
	}
	return 0
}

func (x *DeadCodeInfo) GetEndLine() int32 {
	if x != nil {
		return x.EndLine
	}
	return 0
}

func (x *DeadCodeInfo) GetLineCount() int32 {
	if x != nil {
		return x.LineCount
	}
	return 0
}

func (x *DeadCodeInfo) GetComplexity() float64 {
	if x != nil {
		return x.Complexity
	}
	return 0
}

func (x *DeadCodeInfo) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

// 调用链分析结果
type CallChainAnalysisResult struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	ResultId          string                 `protobuf:"bytes,1,opt,name=result_id,json=resultId,proto3" json:"result_id,omitempty"`                            // 结果ID
	EntryNode         *CallGraphNode         `protobuf:"bytes,2,opt,name=entry_node,json=entryNode,proto3" json:"entry_node,omitempty"`                         // 入口节点
	AllPaths          []*CallPath            `protobuf:"bytes,3,rep,name=all_paths,json=allPaths,proto3" json:"all_paths,omitempty"`                            // 所有路径
	TotalCalls        int32                  `protobuf:"varint,4,opt,name=total_calls,json=totalCalls,proto3" json:"total_calls,omitempty"`                     // 总调用数
	UniqueFunctions   int32                  `protobuf:"varint,5,opt,name=unique_functions,json=uniqueFunctions,proto3" json:"unique_functions,omitempty"`      // 唯一函数数
	CriticalFunctions []string               `protobuf:"bytes,6,rep,name=critical_functions,json=criticalFunctions,proto3" json:"critical_functions,omitempty"` // 关键函数
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *CallChainAnalysisResult) Reset() {
	*x = CallChainAnalysisResult{}
	mi := &file_call_chain_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CallChainAnalysisResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CallChainAnalysisResult) ProtoMessage() {}

func (x *CallChainAnalysisResult) ProtoReflect() protoreflect.Message {
	mi := &file_call_chain_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CallChainAnalysisResult.ProtoReflect.Descriptor instead.
func (*CallChainAnalysisResult) Descriptor() ([]byte, []int) {
	return file_call_chain_proto_rawDescGZIP(), []int{16}
}

func (x *CallChainAnalysisResult) GetResultId() string {
	if x != nil {
		return x.ResultId
	}
	return ""
}

func (x *CallChainAnalysisResult) GetEntryNode() *CallGraphNode {
	if x != nil {
		return x.EntryNode
	}
	return nil
}

func (x *CallChainAnalysisResult) GetAllPaths() []*CallPath {
	if x != nil {
		return x.AllPaths
	}
	return nil
}

func (x *CallChainAnalysisResult) GetTotalCalls() int32 {
	if x != nil {
		return x.TotalCalls
	}
	return 0
}

func (x *CallChainAnalysisResult) GetUniqueFunctions() int32 {
	if x != nil {
		return x.UniqueFunctions
	}
	return 0
}

func (x *CallChainAnalysisResult) GetCriticalFunctions() []string {
	if x != nil {
		return x.CriticalFunctions
	}
	return nil
}

var File_call_chain_proto protoreflect.FileDescriptor

const file_call_chain_proto_rawDesc = "" +
	"\n" +
	"\x10call_chain.proto\x12\tcodeaudit\"\x9f\x01\n" +
	"\x15BuildCallGraphRequest\x12\x1b\n" +
	"\tfile_path\x18\x01 \x01(\tR\bfilePath\x12!\n" +
	"\fentry_points\x18\x02 \x03(\tR\ventryPoints\x12)\n" +
	"\x10include_external\x18\x03 \x01(\bR\x0fincludeExternal\x12\x1b\n" +
	"\tmax_depth\x18\x04 \x01(\x05R\bmaxDepth\"\xd4\x01\n" +
	"\x16BuildCallGraphResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x19\n" +
	"\bgraph_id\x18\x02 \x01(\tR\agraphId\x12\x1d\n" +
	"\n" +
	"node_count\x18\x03 \x01(\x05R\tnodeCount\x12\x1d\n" +
	"\n" +
	"edge_count\x18\x04 \x01(\x05R\tedgeCount\x12\"\n" +
	"\rbuild_time_ms\x18\x05 \x01(\x05R\vbuildTimeMs\x12#\n" +
	"\rerror_message\x18\x06 \x01(\tR\ferrorMessage\"\xa8\x02\n" +
	"\rCallGraphNode\x12\x17\n" +
	"\anode_id\x18\x01 \x01(\tR\x06nodeId\x12#\n" +
	"\rfunction_name\x18\x02 \x01(\tR\ffunctionName\x12\x1b\n" +
	"\tfile_path\x18\x03 \x01(\tR\bfilePath\x12\x1f\n" +
	"\vline_number\x18\x04 \x01(\x05R\n" +
	"lineNumber\x12\x1b\n" +
	"\tin_degree\x18\x05 \x01(\x05R\binDegree\x12\x1d\n" +
	"\n" +
	"out_degree\x18\x06 \x01(\x05R\toutDegree\x12\x1f\n" +
	"\vis_external\x18\a \x01(\bR\n" +
	"isExternal\x12!\n" +
	"\fis_recursive\x18\b \x01(\bR\visRecursive\x12\x1b\n" +
	"\tnode_type\x18\t \x01(\tR\bnodeType\"\xaa\x01\n" +
	"\rCallGraphEdge\x12 \n" +
	"\ffrom_node_id\x18\x01 \x01(\tR\n" +
	"fromNodeId\x12\x1c\n" +
	"\n" +
	"to_node_id\x18\x02 \x01(\tR\btoNodeId\x12\x1b\n" +
	"\tcall_type\x18\x03 \x01(\tR\bcallType\x12\x1d\n" +
	"\n" +
	"call_count\x18\x04 \x01(\x05R\tcallCount\x12\x1d\n" +
	"\n" +
	"call_lines\x18\x05 \x03(\x05R\tcallLines\"\x85\x01\n" +
	"\x14QueryCallPathRequest\x12'\n" +
	"\x0fsource_function\x18\x01 \x01(\tR\x0esourceFunction\x12'\n" +
	"\x0ftarget_function\x18\x02 \x01(\tR\x0etargetFunction\x12\x1b\n" +
	"\tmax_paths\x18\x03 \x01(\x05R\bmaxPaths\"\x84\x01\n" +
	"\x15QueryCallPathResponse\x12)\n" +
	"\x05paths\x18\x01 \x03(\v2\x13.codeaudit.CallPathR\x05paths\x12\x1f\n" +
	"\vtotal_paths\x18\x02 \x01(\x05R\n" +
	"totalPaths\x12\x1f\n" +
	"\vpath_exists\x18\x03 \x01(\bR\n" +
	"pathExists\"z\n" +
	"\bCallPath\x12\x1d\n" +
	"\n" +
	"path_index\x18\x01 \x01(\x05R\tpathIndex\x12.\n" +
	"\x05nodes\x18\x02 \x03(\v2\x18.codeaudit.CallGraphNodeR\x05nodes\x12\x1f\n" +
	"\vpath_length\x18\x03 \x01(\x05R\n" +
	"pathLength\"Z\n" +
	"\x15QueryCallDepthRequest\x12#\n" +
	"\rfunction_name\x18\x01 \x01(\tR\ffunctionName\x12\x1c\n" +
	"\tdirection\x18\x02 \x01(\tR\tdirection\"\xb2\x01\n" +
	"\x16QueryCallDepthResponse\x12%\n" +
	"\x0eincoming_depth\x18\x01 \x01(\x05R\rincomingDepth\x12%\n" +
	"\x0eoutgoing_depth\x18\x02 \x01(\x05R\routgoingDepth\x12\x1b\n" +
	"\tmax_depth\x18\x03 \x01(\x05R\bmaxDepth\x12-\n" +
	"\x06levels\x18\x04 \x03(\v2\x15.codeaudit.DepthLevelR\x06levels\"@\n" +
	"\n" +
	"DepthLevel\x12\x14\n" +
	"\x05level\x18\x01 \x01(\x05R\x05level\x12\x1c\n" +
	"\tfunctions\x18\x02 \x03(\tR\tfunctions\"g\n" +
	"\x14AnalyzeCyclesRequest\x12%\n" +
	"\x0estart_function\x18\x01 \x01(\tR\rstartFunction\x12(\n" +
	"\x10max_cycle_length\x18\x02 \x01(\x05R\x0emaxCycleLength\"\x87\x01\n" +
	"\x15AnalyzeCyclesResponse\x12\x1d\n" +
	"\n" +
	"has_cycles\x18\x01 \x01(\bR\thasCycles\x12,\n" +
	"\x06cycles\x18\x02 \x03(\v2\x14.codeaudit.CallCycleR\x06cycles\x12!\n" +
	"\ftotal_cycles\x18\x03 \x01(\x05R\vtotalCycles\"}\n" +
	"\tCallCycle\x12\x19\n" +
	"\bcycle_id\x18\x01 \x01(\x05R\acycleId\x12\x1c\n" +
	"\tfunctions\x18\x02 \x03(\tR\tfunctions\x12!\n" +
	"\fcycle_length\x18\x03 \x01(\x05R\vcycleLength\x12\x14\n" +
	"\x05lines\x18\x04 \x03(\x05R\x05lines\"z\n" +
	"\x13FindDeadCodeRequest\x12\x1b\n" +
	"\tfile_path\x18\x01 \x01(\tR\bfilePath\x12!\n" +
	"\fentry_points\x18\x02 \x03(\tR\ventryPoints\x12#\n" +
	"\rinclude_tests\x18\x03 \x01(\bR\fincludeTests\"\x80\x01\n" +
	"\x14FindDeadCodeResponse\x12>\n" +
	"\x0edead_functions\x18\x01 \x03(\v2\x17.codeaudit.DeadCodeInfoR\rdeadFunctions\x12(\n" +
	"\x10total_dead_count\x18\x02 \x01(\x05R\x0etotalDeadCount\"\xe1\x01\n" +
	"\fDeadCodeInfo\x12#\n" +
	"\rfunction_name\x18\x01 \x01(\tR\ffunctionName\x12\x1b\n" +
	"\tfile_path\x18\x02 \x01(\tR\bfilePath\x12\x1d\n" +
	"\n" +
	"start_line\x18\x03 \x01(\x05R\tstartLine\x12\x19\n" +
	"\bend_line\x18\x04 \x01(\x05R\aendLine\x12\x1d\n" +
	"\n" +
	"line_count\x18\x05 \x01(\x05R\tlineCount\x12\x1e\n" +
	"\n" +
	"complexity\x18\x06 \x01(\x01R\n" +
	"complexity\x12\x16\n" +
	"\x06reason\x18\a \x01(\tR\x06reason\"\x9c\x02\n" +
	"\x17CallChainAnalysisResult\x12\x1b\n" +
	"\tresult_id\x18\x01 \x01(\tR\bresultId\x127\n" +
	"\n" +
	"entry_node\x18\x02 \x01(\v2\x18.codeaudit.CallGraphNodeR\tentryNode\x120\n" +
	"\tall_paths\x18\x03 \x03(\v2\x13.codeaudit.CallPathR\ballPaths\x12\x1f\n" +
	"\vtotal_calls\x18\x04 \x01(\x05R\n" +
	"totalCalls\x12)\n" +
	"\x10unique_functions\x18\x05 \x01(\x05R\x0funiqueFunctions\x12-\n" +
	"\x12critical_functions\x18\x06 \x03(\tR\x11criticalFunctions2\xba\x03\n" +
	"\x11CallChainAnalyzer\x12U\n" +
	"\x0eBuildCallGraph\x12 .codeaudit.BuildCallGraphRequest\x1a!.codeaudit.BuildCallGraphResponse\x12R\n" +
	"\rQueryCallPath\x12\x1f.codeaudit.QueryCallPathRequest\x1a .codeaudit.QueryCallPathResponse\x12U\n" +
	"\x0eQueryCallDepth\x12 .codeaudit.QueryCallDepthRequest\x1a!.codeaudit.QueryCallDepthResponse\x12R\n" +
	"\rAnalyzeCycles\x12\x1f.codeaudit.AnalyzeCyclesRequest\x1a .codeaudit.AnalyzeCyclesResponse\x12O\n" +
	"\fFindDeadCode\x12\x1e.codeaudit.FindDeadCodeRequest\x1a\x1f.codeaudit.FindDeadCodeResponseB\x1e\n" +
	"\x13com.codeaudit.protoZ\a./protob\x06proto3"

var (
	file_call_chain_proto_rawDescOnce sync.Once
	file_call_chain_proto_rawDescData []byte
)

func file_call_chain_proto_rawDescGZIP() []byte {
	file_call_chain_proto_rawDescOnce.Do(func() {
		file_call_chain_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_call_chain_proto_rawDesc), len(file_call_chain_proto_rawDesc)))
	})
	return file_call_chain_proto_rawDescData
}

var file_call_chain_proto_msgTypes = make([]protoimpl.MessageInfo, 17)
var file_call_chain_proto_goTypes = []any{
	(*BuildCallGraphRequest)(nil),   // 0: codeaudit.BuildCallGraphRequest
	(*BuildCallGraphResponse)(nil),  // 1: codeaudit.BuildCallGraphResponse
	(*CallGraphNode)(nil),           // 2: codeaudit.CallGraphNode
	(*CallGraphEdge)(nil),           // 3: codeaudit.CallGraphEdge
	(*QueryCallPathRequest)(nil),    // 4: codeaudit.QueryCallPathRequest
	(*QueryCallPathResponse)(nil),   // 5: codeaudit.QueryCallPathResponse
	(*CallPath)(nil),                // 6: codeaudit.CallPath
	(*QueryCallDepthRequest)(nil),   // 7: codeaudit.QueryCallDepthRequest
	(*QueryCallDepthResponse)(nil),  // 8: codeaudit.QueryCallDepthResponse
	(*DepthLevel)(nil),              // 9: codeaudit.DepthLevel
	(*AnalyzeCyclesRequest)(nil),    // 10: codeaudit.AnalyzeCyclesRequest
	(*AnalyzeCyclesResponse)(nil),   // 11: codeaudit.AnalyzeCyclesResponse
	(*CallCycle)(nil),               // 12: codeaudit.CallCycle
	(*FindDeadCodeRequest)(nil),     // 13: codeaudit.FindDeadCodeRequest
	(*FindDeadCodeResponse)(nil),    // 14: codeaudit.FindDeadCodeResponse
	(*DeadCodeInfo)(nil),            // 15: codeaudit.DeadCodeInfo
	(*CallChainAnalysisResult)(nil), // 16: codeaudit.CallChainAnalysisResult
}
var file_call_chain_proto_depIdxs = []int32{
	6,  // 0: codeaudit.QueryCallPathResponse.paths:type_name -> codeaudit.CallPath
	2,  // 1: codeaudit.CallPath.nodes:type_name -> codeaudit.CallGraphNode
	9,  // 2: codeaudit.QueryCallDepthResponse.levels:type_name -> codeaudit.DepthLevel
	12, // 3: codeaudit.AnalyzeCyclesResponse.cycles:type_name -> codeaudit.CallCycle
	15, // 4: codeaudit.FindDeadCodeResponse.dead_functions:type_name -> codeaudit.DeadCodeInfo
	2,  // 5: codeaudit.CallChainAnalysisResult.entry_node:type_name -> codeaudit.CallGraphNode
	6,  // 6: codeaudit.CallChainAnalysisResult.all_paths:type_name -> codeaudit.CallPath
	0,  // 7: codeaudit.CallChainAnalyzer.BuildCallGraph:input_type -> codeaudit.BuildCallGraphRequest
	4,  // 8: codeaudit.CallChainAnalyzer.QueryCallPath:input_type -> codeaudit.QueryCallPathRequest
	7,  // 9: codeaudit.CallChainAnalyzer.QueryCallDepth:input_type -> codeaudit.QueryCallDepthRequest
	10, // 10: codeaudit.CallChainAnalyzer.AnalyzeCycles:input_type -> codeaudit.AnalyzeCyclesRequest
	13, // 11: codeaudit.CallChainAnalyzer.FindDeadCode:input_type -> codeaudit.FindDeadCodeRequest
	1,  // 12: codeaudit.CallChainAnalyzer.BuildCallGraph:output_type -> codeaudit.BuildCallGraphResponse
	5,  // 13: codeaudit.CallChainAnalyzer.QueryCallPath:output_type -> codeaudit.QueryCallPathResponse
	8,  // 14: codeaudit.CallChainAnalyzer.QueryCallDepth:output_type -> codeaudit.QueryCallDepthResponse
	11, // 15: codeaudit.CallChainAnalyzer.AnalyzeCycles:output_type -> codeaudit.AnalyzeCyclesResponse
	14, // 16: codeaudit.CallChainAnalyzer.FindDeadCode:output_type -> codeaudit.FindDeadCodeResponse
	12, // [12:17] is the sub-list for method output_type
	7,  // [7:12] is the sub-list for method input_type
	7,  // [7:7] is the sub-list for extension type_name
	7,  // [7:7] is the sub-list for extension extendee
	0,  // [0:7] is the sub-list for field type_name
}

func init() { file_call_chain_proto_init() }
func file_call_chain_proto_init() {
	if File_call_chain_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_call_chain_proto_rawDesc), len(file_call_chain_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   17,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_call_chain_proto_goTypes,
		DependencyIndexes: file_call_chain_proto_depIdxs,
		MessageInfos:      file_call_chain_proto_msgTypes,
	}.Build()
	File_call_chain_proto = out.File
	file_call_chain_proto_goTypes = nil
	file_call_chain_proto_depIdxs = nil
}
